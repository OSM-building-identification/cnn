CREATE TABLE predictions (
    id integer NOT NULL,
    x integer NOT NULL,
    y integer NOT NULL,
    has_building boolean,
    model integer,
    completed boolean,
    incorrect boolean
);

CREATE SEQUENCE predictions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

ALTER SEQUENCE predictions_id_seq OWNED BY predictions.id;

CREATE SEQUENCE segmentation_training_tiles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE segmentation_training_tiles (
    id integer DEFAULT nextval('segmentation_training_tiles_id_seq'::regclass) NOT NULL,
    x integer NOT NULL,
    y integer NOT NULL,
    useable boolean,
    verified boolean,
    dx integer,
    dy integer
);

CREATE TABLE training_tiles (
    id integer NOT NULL,
    x integer NOT NULL,
    y integer NOT NULL,
    verified boolean,
    has_building boolean
);

CREATE SEQUENCE training_tiles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

ALTER SEQUENCE training_tiles_id_seq OWNED BY training_tiles.id;

ALTER TABLE ONLY predictions ALTER COLUMN id SET DEFAULT nextval('predictions_id_seq'::regclass);

ALTER TABLE ONLY training_tiles ALTER COLUMN id SET DEFAULT nextval('training_tiles_id_seq'::regclass);

ALTER TABLE ONLY predictions
    ADD CONSTRAINT predictions_pkey PRIMARY KEY (id);

ALTER TABLE ONLY segmentation_training_tiles
    ADD CONSTRAINT segmentation_training_tiles_pkey PRIMARY KEY (id);

ALTER TABLE ONLY training_tiles
    ADD CONSTRAINT training_tiles_pkey PRIMARY KEY (id);

CREATE INDEX location ON training_tiles USING btree (y, x);

CREATE INDEX location_p ON predictions USING btree (x, y);
